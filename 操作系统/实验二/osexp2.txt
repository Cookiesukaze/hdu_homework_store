0.查看当前内核
cat /proc/version 
获得 Linux version 5.15.0-88-generic

1.
cd .. 一直到home之外
ls -a
cd ./usr/src/
ls -a 发现有两个内核
cd linux-headers-5.15.0-88-generic 选择当前的内核下
cd ./kernel/sys.c 发现没有，仔细一看是要去下载新的内核源码，解压在里面找

1.respawn1 下载内核源码以及解压找到sys.c
su
把新下的linux-6.5.10.tar.gz放到共享文件夹
tar -zxvf linux-6.5.10.tar.gz -C /usr/src/ 解压祂和其他的内核一起
cd / 到根目录
cd usr/src/linux-6.5.10/kernel
vim sys.c
按esc进入命令模式，:wq保存退出
把sys.c保存到共享文件夹备用 
cp /usr/src/linux-6.5.10/kernel/sys.c /home/respawn/Ubuntu_share/Ubuntu_share/osexp/osexp2/sys.c
本地再复制一份叫做sys_ori.c备用

2.声明并实现系统调用服务例程
su
cd / 到根目录
cd /usr/src/linux-6.5.10/kernel

cp /usr/src/linux-6.5.10/arch/x86/include/asm/syscalls.h  /home/respawn/Ubuntu_share/Ubuntu_share/osexp/osexp2/syscalls.h
本地再复制一份叫做syscalls_ori.h备用
cd /usr/src/linux-6.5.10/arch/x86/include/asm/
vim syscalls.h 中endif之前添加声明（声明和实现代码都在md文件里）

cd /usr/src/linux-6.5.10/kernel/
vim sys.c中#endif /*config_compat*/（最后）之前添加实现

3.添加系统调用（添加新表项）
su
cd /usr/src/linux-6.5.10/arch/x86/entry/syscalls
ls 确定到syscall_64.tbl的存在
cp /usr/src/linux-6.5.10/arch/x86/entry/syscalls/syscall_64.tbl /home/respawn/Ubuntu_share/Ubuntu_share/osexp/osexp2/syscall_64.tbl
本地再复制一份叫做syscall_64_ori.tbl备用

回到syscall_64.tbl，编辑它，
发现334号后面是空的，过于后面的又不能用，i键进入编辑模式，新建335号mysetnice以及sys_mysetnice

4.安装一些依赖先
sudo apt-get update
sudo apt-get install libncurses5-dev
sudo apt-get install build-essential openssl
sudo apt-get install flex
sudo apt-get install bison
sudo apt-get install libssl-dev
sudo apt-get update

5.内核编译
su
cd /usr/src/linux-6.5.10
make mrproper 清理之前的编译结果
make clean 清理临时文件
make menuconfig 配置新内核选项，这一步可能报错，由于是图形化界面，把窗口拉宽点
依次选择save load exit
make -j12 多线程编译
报错xxx.h: 没有那个文件或目录，
sudo apt-get install libelf-dev，然后重新执行上面的
运行十几分钟终止报错:make[1]: *** [/usr/src/linux-6.5.10/Makefile:2034：.] 错误 2
cp /usr/src/linux-6.5.10/Makefile /home/respawn/Ubuntu_share/Ubuntu_share/osexp/osexp2/Makefile
找到2034行不知道发生了什么
关机，修改内存16G，扩展盘50G，安装gparted重新分区
重新执行上面的
export VERBOSE=1
make -j12
无果，怒而clean，选用低版本kernel重试以上过程

make modules
make modules_install 编译安装modules
make install 安装内核
reboot 重启
uname -r 验证


